package com.vti.main.Controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.vti.main.BookForm.BookForm;
import com.vti.main.DataNotFoundException.DataNotFoundException;
import com.vti.main.Models.Book;
import com.vti.main.Services.IBookService;

@RestController
@RequestMapping(value = "api/v1/genres")
public class GenresController {
	@Autowired
	private IBookService service;

	@GetMapping()
	public List<Book> getAllBooks() {
		return service.getAllBooks();

	}

	@GetMapping(value = "/{book_id}")
	public ResponseEntity<?> getBookById(@PathVariable(name = "book_id") int id) {
		try {
			return ResponseEntity.ok(service.getBookById(id));
		} catch (DataNotFoundException e) {
			return ResponseEntity.badRequest().body(e.getMessage());
		}
	}

	@PostMapping()
	public ResponseEntity createBook(@RequestBody BookForm form) {
		Book book = form.toEntity(); // Chuyển đổi DepartmentForm thành Department
		service.createBook(book);
		return ResponseEntity.status(HttpStatus.CREATED).body("Book created successfully");
	}

	@DeleteMapping(value = "/delete/{book_id}")
	public ResponseEntity<String> deleteBookById(@PathVariable(name = "book_id") int id) {
		try {
			service.deleteBookById(id);
			return ResponseEntity.ok("Book deleted successfully");
		} catch (Exception e) {
			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to delete book");
		}
	}
}
